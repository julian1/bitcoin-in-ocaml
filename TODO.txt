

  - get micro-ecc working with native code library linking

  - get full script evaluation working, not just sig-checking

  - we're getting tx's recorded twice, because they're in an orphaned block
      (should be fixed with _main and _tx views)

  - lots of old filedescriptors in list, when they're probably not active. 
  - fix our single entry packing of the inv request, which means we can't progress if the 
      only leaf is an orphaned block. 

  - issue - inventory tx cannot be cleared when block is produced, because a chainstate reoganisation could
    mean that block becomes orphaned. 

  - get rid of caml case functions in message.ml

  - test for tx ecc checking. prev

  - finish wif
  - merkle tree
  - compute difficuly in relation to block time, so we can test against block difficulty
  - store peers in db for easy resumption

  - connect to ltc, doge

  - Consider using Z values instead of Int64 ...

  - done - not null on main columns 
  - done - organize with foreign keys first
  - done put unique constraint on tx hash 
  - done add a mapping table between 
  - done rename views to use prefix underscores
  - done - store the sigtype in signature
  - done move the tx pos, length into the tx_block structure, maybe also add blockdata id... no 
  - done - get rid of blockdata? since it's one-to-one with block?  
      - no - because allows non-null enforcement and might be faster
  - done record pos, len in output, starting from 0 in tx and check 
  - done maybe same for input
  - done lookup the tx before insert to see if already have it
  - done - the blockdata i think should point at block. rather than block at blockdata. 
      because for the first query hash there will be no blockdata. 
  - done - and previous should be a separate table.

  - done - whether a block is mainnet, or orphaned or testnet is a dynamic property - now db.
  - done - move address test stuff in /test dir?
  - done - test for block header decode 
  - done - we've got to get test code, extracted and working 
  - done - decode difficulty, - can use either floating point, or z. float will be eaiser 

  - http/or cli interface to examine the read-only structures now, so
    it's not really necessary to dump state everytime.

  - simplify address storing not to use complicated prepared stmt 
  - change var name 'x' to acc or something

  - merkle root 

  - maybe an module encapsulation of the String Z hex representation 
    - with functions for Z or sha hashing or private/pub key, hex formatting  etc.
    - rather than converting everything around in code when needed.

----

----
  transaction malleability and removing items from mempool??? how? 
    probably just record the block one, then the mempool one utxos will be spent
----
   - note that tx data may be stored twice in two forked blocks. we get it correctly... 
  - meaning it may appear more than once...

  - ok, there's an issue that tx data might be in block, or somewhere else
    makes it har

---
  change name process_block to store_block ?

  - IMPORTANT should move the transaction isolation begin and commit outside the process block
    so that if want to do other actions - like check if block has been inserted in the same
    tx we can.

